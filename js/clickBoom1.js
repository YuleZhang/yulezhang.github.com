(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

var numberOfParticules = 20;
var minOrbitRadius = 50;
var maxOrbitRadius = 100;
var minCircleRadius = 10;
var maxCircleRadius = 20;
var minAnimeDuration = 900;
var maxAnimeDuration = 1500;
var minDiffuseRadius = 50;
var maxDiffuseRadius = 100;
var canvasEl = document.querySelector(".fireworks");
var ctx = canvasEl.getContext("2d");
var pointerX = 0;
var pointerY = 0;
var tap = "ontouchstart" in window || navigator.msMaxTouchPoints ? "touchstart" : "mousedown"; // sea blue

var colors = ["127, 180, 226", "157, 209, 243", "204, 229, 255"];

function setCanvasSize() {
  canvasEl.width = window.innerWidth;
  canvasEl.height = window.innerHeight;
  canvasEl.style.width = window.innerWidth + "px";
  canvasEl.style.height = window.innerHeight + "px";
}

function updateCoords(e) {
  pointerX = e.clientX || e.touches[0].clientX;
  pointerY = e.clientY || e.touches[0].clientY;
}

function setParticuleDirection(p) {
  var angle = anime.random(0, 360) * Math.PI / 180;
  var value = anime.random(minDiffuseRadius, maxDiffuseRadius);
  var radius = [-1, 1][anime.random(0, 1)] * value;
  return {
    x: p.x + radius * Math.cos(angle),
    y: p.y + radius * Math.sin(angle)
  };
}

function createParticule(x, y) {
  var p = {};
  p.x = x;
  p.y = y;
  p.color = "rgba(" + colors[anime.random(0, colors.length - 1)] + "," + anime.random(0.2, 0.8) + ")";
  p.radius = anime.random(minCircleRadius, maxCircleRadius);
  p.endPos = setParticuleDirection(p);

  p.draw = function () {
    ctx.beginPath();
    ctx.arc(p.x, p.y, p.radius, 0, 2 * Math.PI, true);
    ctx.fillStyle = p.color;
    ctx.fill();
  };

  return p;
}

function createCircle(x, y) {
  var p = {};
  p.x = x;
  p.y = y;
  p.color = "#000";
  p.radius = 0.1;
  p.alpha = 0.5;
  p.lineWidth = 6;

  p.draw = function () {
    ctx.globalAlpha = p.alpha;
    ctx.beginPath();
    ctx.arc(p.x, p.y, p.radius, 0, 2 * Math.PI, true);
    ctx.lineWidth = p.lineWidth;
    ctx.strokeStyle = p.color;
    ctx.stroke();
    ctx.globalAlpha = 1;
  };

  return p;
}

function renderParticule(anim) {
  for (var i = 0; i < anim.animatables.length; i++) {
    anim.animatables[i].target.draw();
  }
}

function animateParticules(x, y) {
  var circle = createCircle(x, y);
  var particules = [];

  for (var i = 0; i < numberOfParticules; i++) {
    particules.push(createParticule(x, y));
  }

  anime.timeline().add({
    targets: particules,
    x: function x(p) {
      return p.endPos.x;
    },
    y: function y(p) {
      return p.endPos.y;
    },
    radius: 0.1,
    duration: anime.random(minAnimeDuration, maxAnimeDuration),
    easing: "easeOutExpo",
    update: renderParticule
  }).add({
    targets: circle,
    radius: anime.random(minOrbitRadius, maxOrbitRadius),
    lineWidth: 0,
    alpha: {
      value: 0,
      easing: "linear",
      duration: anime.random(600, 800)
    },
    duration: anime.random(1200, 1800),
    easing: "easeOutExpo",
    update: renderParticule,
    offset: 0
  });
}

var render = anime({
  duration: Infinity,
  update: function update() {
    ctx.clearRect(0, 0, canvasEl.width, canvasEl.height);
  }
});
document.addEventListener(tap, function (e) {
  render.play();
  updateCoords(e);
  animateParticules(pointerX, pointerY);
}, false);
setCanvasSize();
window.addEventListener("resize", setCanvasSize, false);

},{}]},{},[1])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
